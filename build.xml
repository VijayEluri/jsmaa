<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="jsmaa"
        xmlns:artifact="antlib:org.apache.maven.artifact.ant">

    <!-- include maven ant-tasks -->
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
		uri="antlib:org.apache.maven.artifact.ant" />

    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
	<property name="junit.output.dir" value="junit"/>	
    <property name="source" value="1.5"/>

    <artifact:pom id="jsmaa-pom" file="pom.xml" />

    <artifact:dependencies
        pathId="dep.classpath"
        pomRefId="jsmaa-pom"
        useScope="compile" />

    <artifact:dependencies
        pathId="test.classpath"
        pomRefId="jsmaa-pom"
        useScope="test" />

    <target name="install" depends="dist">
        <artifact:install file="dist/jsmaa.jar">
            <pom refid="jsmaa-pom" />
        </artifact:install>
    </target>

    <target name="deploy" depends="dist">
        <artifact:install-provider
            artifactId="wagon-ssh" version="1.0-beta-2" />
        <artifact:deploy file="dist/jsmaa.jar">
            <remoteRepository url="scp://drugis.org/var/www/drugis.org/mvn">
                <authentication username="gert"
                    privateKey="/home/gert/.ssh/id_rsa" />
            </remoteRepository>
            <pom refid="jsmaa-pom" />
        </artifact:deploy>
    </target>
	
	<target name="dist" depends="build">
			<delete dir="dist" />
			<mkdir dir="dist" />
			<mkdir dir="dist/lib" />
			<copy todir="dist/lib" includeemptydirs="false">
				<path refid="dep.classpath" />
                <mapper type="flatten" />
			</copy>
            <pathconvert property="dist-class-path" pathsep=" " dirsep="/">
                <fileset dir="dist/lib" />
                <map from="${basedir}/dist" to="." />		
            </pathconvert>

			<jar destfile="dist/jsmaa.jar" basedir="bin" excludes="**/test/*">
				<manifest>
					<attribute name="Main-Class" value="fi.smaa.jsmaa.JSMAAMain" />
					<attribute name="Class-Path" value="${dist-class-path}" />
				</manifest>
			</jar>
		</target>
	
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    	<delete dir="junit"/>
    </target>
    <target depends="build-project" name="build"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath>
                <pathelement location="bin/" />
                <path refid="test.classpath"/>
            </classpath>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
	<target name="test" depends="build">
		<mkdir dir="${junit.output.dir}"/>
		<junit fork="yes" printsummary="withOutAndErr" haltonfailure="true">
			<formatter type="xml"/>
			<classpath>
				<pathelement location="bin/" />
				<path refid="test.classpath" />	
			</classpath>
			<batchtest todir="${junit.output.dir}">
				<fileset dir="bin/">
					<include name="**/*test/*Test.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>	
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${junit.output.dir}"/>
		</junitreport>
	</target>	
</project>
